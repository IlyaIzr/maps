import{u as p,j as u,T as f,o as y,d as s}from"./index-5904d5c1.js";function l(r,a,e){e===void 0&&(e={});var t={type:"Feature"};return(e.id===0||e.id)&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.properties=a||{},t.geometry=r,t}function v(r,a,e){if(e===void 0&&(e={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("coordinates must contain numbers");var t={type:"Point",coordinates:r};return l(t,a,e)}function A(r,a,e){e===void 0&&(e={});for(var t=0,i=r;t<i.length;t++){var n=i[t];if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var o=0;o<n[n.length-1].length;o++)if(n[n.length-1][o]!==n[0][o])throw new Error("First and last Position are not equivalent.")}var h={type:"Polygon",coordinates:r};return l(h,a,e)}function E(r,a,e){e===void 0&&(e={});var t={type:"MultiPolygon",coordinates:r};return l(t,a,e)}function m(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function N(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if(r.type==="Feature"&&r.geometry!==null&&r.geometry.type==="Point")return r.geometry.coordinates;if(r.type==="Point")return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function P(r){if(Array.isArray(r))return r;if(r.type==="Feature"){if(r.geometry!==null)return r.geometry.coordinates}else if(r.coordinates)return r.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function x(r){return r.type==="Feature"?r.geometry:r}function F(r,a){return r.type==="FeatureCollection"?"FeatureCollection":r.type==="GeometryCollection"?"GeometryCollection":r.type==="Feature"&&r.geometry!==null?r.geometry.type:r.type}function c(r){return String(Number(r).toPrecision(3)).split(".")}function b(r,a){if(!r)return s[a][0];for(let e=0;e<s[a].length;e++)if(+r-1<e)return s[a][e]}function C({rating:r,amount:a}){const{theme:e}=p(i=>i.app),t=b(r,e);return u.jsx("div",{className:"rating",children:u.jsxs("div",{className:"ratingAmount mp-border-primary relative",style:{borderColor:t},title:f.rating,children:[y(c(r)[0]),".",u.jsx("span",{children:y(c(r)[1])}),u.jsxs("sub",{className:"mp-dark mp-bg-light",style:{color:t},title:f.marks,children:[" ( ",a," ) "]})]})})}const g=["lat","lng","zoom","clat","clng"];function w(){const r=new URL(document.location).searchParams,a={};return g.forEach(e=>{const t=+(r.get(e)||"");typeof t=="number"&&!Number.isNaN(t)&&(a[e]=t)}),a}function T(r){const a=new URLSearchParams(window.location.search),t={...w(),...r};g.forEach(i=>{const n=t[i];typeof n=="number"&&a.set(i,String(n))}),window.history.replaceState({},"",`${location.pathname}?${a}`)}export{C as T,w as a,v as b,F as c,N as d,P as e,x as g,E as m,A as p,T as s};
