{"version":3,"sources":["requests/config.js","requests/map.js","rest/colors.js","Map/onLoad.js","Map/onClick.js","rest/helperFuncs.js","rest/lang.js","Map/addControl.js","Map/Map.jsx","Map/filters.js","Map/Rater.jsx","Map/Featurer.jsx","Map/formatGeodata.js","Map/Legend.jsx","store/app.js","Map/Reviews.jsx","Map/Main.jsx","store/user.js","Auth/Login.jsx","Auth/Register.jsx","Auth/AuthMain.jsx","App.jsx","store/root.js","reportWebVitals.js","index.js"],"names":["api","process","getPlaces","minx","maxx","miny","maxy","a","options","method","headers","fetch","response","json","res","getReviews","placeId","postInitReview","data","body","JSON","stringify","postNextReview","getAdress","lat","lng","typesNeeded","Set","Number","window","geocoderRef","geocode","adress","results","i","length","obj","types","formatted_address","split","find","type","has","address_components","long_name","postPlaceName","name","id","gradient","mapOnLoad","map","geoJson","on","e","addSource","firstSymbolId","getStyle","layers","layer","addLayer","paint","mapOnClick","setFeature","resetRater","drawObject","lesserGeometry","feature","geo","res2","turf","union","geometry","geoFromTurf","someFeatures","querySourceFeatures","filter","sourceLayer","splice","f","findFeatureClones","zoomOnEvent","zoom","lngLat","flyTo","center","features","queryRenderedFeatures","point","featuresNeeded","ratedBefore","source","console","log","trash","flyToFeature","featureToRate","getZoom","properties","labelTypes","defaultZoom","getLocation","loc","localStorage","getItem","parse","TEXT","homeLinkBtn","authLinkBtn","setsLinkBtn","login","logout","register","yourName","submit","confirm","greetings","firstTimeRate","placeRatingPrefix","placeAmountPrefix","placeAmountNumberEnds1","placeAmountEndsMultiple","push","commentPlacehol","rating","bestRating","worstRating","reviews","noComments","searchPHolder","newFeature","newFeaturePHolder","drawPromptHeader","drawPrompt","mapAddControl","createBtn","deleteBtn","setDrawPrompt","draw","MapboxDraw","displayControlsDefault","controls","updateArea","style","display","getAll","area","Math","round","amount","created","centroid","coordinates","_vectorTileFeature","_x","floor","pow","_y","tan","PI","cos","onclick","changeMode","deleteAll","addControl","mapboxgl","accessToken","Map","geoData","setGeoData","featureTrigger","mapContainer","useRef","useState","useEffect","status","current","places","placeData","polygon","polyFigure","x","y","container","MapboxGeocoder","placeholder","google","maps","Geocoder","interval","setInterval","getCenter","setItem","saveLocation","clearInterval","setMapData","ref","className","src","alt","sourceId","getSource","setData","speed","Rater","setRating","comment","setComment","onSubmit","hover","setHover","onClick","onMouseEnter","target","onMouseLeave","Array","star","index","color","cols","rows","value","onInput","Featurer","setName","String","endsWith","title","formatGeodata","multiPoly","north","east","south","west","polyPoints","forEach","polyCoords","polyArray","shapeIndex","lon","join","polygonMapper","multiFormatted","Legend","backgroundColor","background","LOGINUSER","LOGOUTUSER","EXPAND_COMMENTS","SHRINK_COMMENTS","initialState","isLogged","language","reviewsShown","setLoginStatus","d","Reviews","dispatch","useDispatch","useSelector","state","app","setReviews","review","author","toUpperCase","Date","timestamp","toLocaleDateString","Boolean","grade","random","noreviews","expandComments","Main","user","setFeatureTrigger","mapTrigger","setMapTrigger","updateLayers","northEastest","southWestest","polyString","tempBox","LngLatBounds","targetId","place","toFixed","WRITECREDENTIALS","CHANGELEVEL","level","setCredentials","credentials","logIntoApp","Login","username","setUsername","clear","htmlFor","Register","AuthMain","isLogging","App","isMain","setIsMain","prevUser","to","path","rootReducer","combineReducers","act","newLevel","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33a777a3.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\r\n  var prodAdress = process.env.REACT_APP_PROD\r\n}\r\n\r\nexport const host = prodAdress || process.env.REACT_APP_LOCAL\r\nexport const api = host + 'api/'","import { api } from './config'\r\n\r\n\r\nexport async function getPlaces(minx, maxx, miny, maxy) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }\r\n  try {\r\n    let response\r\n    if (minx) response = await fetch(api + `maps/places?minx=${minx}&miny=${miny}&maxx=${maxx}&maxy=${maxy}`, options)\r\n    else response = await fetch(api + `maps/places`, options)\r\n    const res = await response.json()\r\n    return res\r\n  } catch (err) {\r\n    return err\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function getReviews(placeId) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }\r\n  try {\r\n    const response = await fetch(api + `maps/reviews?targetId=${placeId}`, options)\r\n    const res = await response.json()\r\n    return res\r\n  } catch (err) {\r\n    return err\r\n  }\r\n}\r\n\r\n\r\nexport async function postInitReview(data) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ ...data })\r\n  }\r\n  try {\r\n    const response = await fetch(api + 'maps/postInitReview', options)\r\n    const res = await response.json()\r\n    return res\r\n  } catch (err) {\r\n    return err\r\n  }\r\n}\r\n\r\nexport async function postNextReview(data) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ ...data })\r\n  }\r\n  try {\r\n    const response = await fetch(api + 'maps/postNextReview', options)\r\n    const res = await response.json()\r\n    return res\r\n  } catch (err) {\r\n    return err\r\n  }\r\n}\r\n\r\nexport async function getAdress(lat, lng) {\r\n  const typesNeeded = new Set(\r\n    ['street_address', 'natural_feature', 'airport', 'park', 'point_of_interest', \"establishment\", \"food\", \"store\"]\r\n  )\r\n  lat = Number(lat)\r\n  lng = Number(lng)\r\n\r\n  // Get decent adress from geocoder\r\n  const res = await window.geocoderRef.geocode({ 'location': { lat, lng } });\r\n\r\n  let adress = \"\"\r\n  if (res.results) {\r\n    for (let i = 0; i < res.results.length; i++) {\r\n      const obj = res.results[i];\r\n      if (obj.types[0] === 'premise') {\r\n        adress = obj.formatted_address.split(', ')[0] + ', ' + obj.formatted_address.split(', ')[1];\r\n        break\r\n      }\r\n      if (obj.types.find(type => typesNeeded.has(type))) {\r\n        adress = obj.address_components[1].long_name + ', ' + obj.address_components[0].long_name\r\n        break\r\n      }\r\n    }\r\n    // TODO error handling\r\n  }\r\n  return adress\r\n}\r\n\r\n// TMP\r\n\r\nexport async function postPlaceName(name, id) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, id })\r\n  }\r\n  try {\r\n    const response = await fetch(api + 'maps/postPlaceName', options)\r\n    const res = await response.json()\r\n    return res\r\n  } catch (err) {\r\n    return err\r\n  }\r\n}","// Map rating colors\r\n// const draftYellowPurple = ['#e9d5b8', '#e9c5ae', '#dfb7b6', '#d59dbd', '#c379cd', '#f729f6']\r\n// const linearYellowPurpleMeak = ['#e9d1ba', '#edacc6', '#ef8fd1', '#f173db', '#f354e6', '#f729f6']\r\n// const blackToPuplre = ['#170f11', '#2e122e', '#4a1c4a', '#6f2a6f', '#993a99', '#e262c9']\r\n// const redGoldExperiment = ['#5b263c', '#a74b2f',  '#e2734a', '#d5aa83', '#e49b3b', 'gold']\r\n// const linearYellowPurpleBright = ['#eedd71', '#efc682', '#f1a69a', '#f28faa', '#f469c6', '#f729f6']\r\n// const greenRedClassics = ['#712d2d', '#a74b2f', '#e2734a', '#e1b87a', '#8bd38b', '#18a019']\r\n// const lightGreenRed = ['#712d2d', '#a74b2f', '#e2734a', '#e8c337', '#abff38', '#88ff45']\r\nconst brightGreenRed = ['#cd0c0c', '#e14612', '#e1922c', '#e8c337', '#94c52f', '#0aa112']\r\n\r\nexport const gradient = brightGreenRed  \r\n\r\n\r\n// Some green\r\n// export const accentColor = '#a5ec37'\r\n// pale red\r\n// export const accentColor = '#ffadad'\r\n\r\nexport const accentColor = '#ffc900'\r\n// export const counterAccent = '#bcbfff' //good color that doesn't shown. TODO implemetation https://stackoverflow.com/questions/52162989/mapbox-gl-js-changing-polygon-border-width\r\nexport const counterAccent = 'blue'","import { accentColor, counterAccent, gradient } from \"../rest/colors\";\r\n\r\nexport function mapOnLoad(map, geoJson) {\r\n  map.on('load', function (e) {\r\n\r\n    // Define a source before using it to create a new layer\r\n    map.addSource('ratedFeaturesSource', {\r\n      type: 'geojson',\r\n      data: {\r\n        \"type\": \"FeatureCollection\",\r\n        \"features\": geoJson\r\n      },\r\n    });\r\n    map.addSource('selectedFeatureSrc', {\r\n      type: 'geojson',\r\n      data: {\r\n        \"type\": \"FeatureCollection\",\r\n        \"features\": []\r\n      },\r\n    });\r\n\r\n\r\n    // Draw data on map\r\n\r\n    // __draw our layer underneath labels\r\n    const layers = map.getStyle().layers;\r\n    const firstSymbolId = layers.find(layer => layer.type === 'symbol').id;\r\n\r\n    map.addLayer({\r\n      'id': 'ratedFeatures',\r\n      'source': 'ratedFeaturesSource',\r\n      // 'source-layer': 'building',\r\n      'minzoom': 11,\r\n      'type': 'fill',\r\n      paint: {\r\n        'fill-opacity': 0.5,\r\n\r\n        'fill-color': [\r\n          \"interpolate\", [\"linear\"], ['get', 'rating'],\r\n\r\n          0, gradient[0],\r\n          1, gradient[1],\r\n          2, gradient[2],\r\n          3, gradient[3],\r\n          4, gradient[4],\r\n          5, gradient[5]\r\n          // 1, '#eee2cc',\r\n          // 5, gradient[5]\r\n        ]\r\n      }\r\n    }, firstSymbolId)\r\n\r\n    map.addLayer({\r\n      'id': 'selectedFeature',\r\n      'source': 'selectedFeatureSrc',\r\n      'minzoom': 13,\r\n      'type': 'fill',\r\n      paint: {\r\n        'fill-opacity': 0.9,\r\n        'fill-color': accentColor,\r\n        'fill-outline-color': counterAccent\r\n      }\r\n    }, firstSymbolId)\r\n\r\n  })\r\n}","import { getAdress } from \"../requests/map\"\r\nimport { flyToFeature } from \"./Map\"\r\n\r\nexport function mapOnClick(map, setFeature, resetRater, drawObject) {\r\n  function geoFromTurf(geo) {\r\n    if (!geo[1]) return geo[0]\r\n    let res2 = window.turf.union(geo[0], geo[1])\r\n    if (geo[2]) for (let i = 2; i < geo.length; i++) {\r\n      res2 = window.turf.union(res2, geo[i])\r\n    }\r\n\r\n    return res2.geometry\r\n  }\r\n  function findFeatureClones(feature) {\r\n    const someFeatures = map.querySourceFeatures(\"composite\",\r\n      {\r\n        filter: [\"any\", [\"==\", [\"id\"], feature.id]],\r\n        sourceLayer: feature.sourceLayer\r\n      }\r\n    )\r\n    someFeatures.splice(someFeatures.length / 2)\r\n    return someFeatures.map(f => f.geometry)\r\n  }\r\n  function lesserGeometry(feature) {\r\n    const features = findFeatureClones(feature) || []\r\n    return geoFromTurf(features)\r\n  }\r\n\r\n  map.on('click', async function (e) {\r\n    function zoomOnEvent(zoom) {\r\n      const { lng, lat } = e.lngLat\r\n      map.flyTo({ center: [lng, lat], zoom: zoom });\r\n    }\r\n    // if (map.getZoom() < 16) zoomOnEvent(16)\r\n\r\n    const features = map.queryRenderedFeatures(e.point);\r\n    const featuresNeeded = new Set(['building', 'landuse'])\r\n\r\n    // Case next timer\r\n    const ratedBefore = features.find(feature => feature.source === 'ratedFeaturesSource')\r\n    if (ratedBefore) {\r\n      console.log('found rated feature', ratedBefore);\r\n      drawObject.trash()\r\n\r\n\r\n      flyToFeature(map, ratedBefore)\r\n      setFeature(ratedBefore)\r\n      return;\r\n    }\r\n\r\n    // Case first timer\r\n    const featureToRate = features.find(feature => featuresNeeded.has(feature.sourceLayer))\r\n    if (featureToRate?.id) {\r\n      console.log('found feature', featureToRate);\r\n      drawObject.trash()\r\n\r\n\r\n      const zoom = map.getZoom()\r\n      const [lng, lat] = flyToFeature(map, featureToRate, zoom < 16 ? 16 : zoom) //TODO make some sort of buffer \r\n      const geometry = lesserGeometry(featureToRate)\r\n\r\n      featureToRate.properties.name = await getAdress(lat, lng)\r\n\r\n      setFeature({ ...featureToRate, geometry })\r\n      return;\r\n\r\n    } else if (featureToRate) {\r\n      console.log('interesting, but no id', featureToRate);\r\n      drawObject.trash()\r\n\r\n      zoomOnEvent(map.getZoom() + 1)\r\n      setFeature(null)\r\n      return;\r\n    }\r\n    else {\r\n      if (features?.[0]?.source === 'mapbox-gl-draw-hot') return;\r\n      console.log('no interesting features', features);\r\n\r\n\r\n      const labelTypes = new Set(['natural_label', 'place_label', 'poi_label', 'housenum_label', 'airport_label'])\r\n      const labelFeature = features.find(feature => labelTypes.has(feature.sourceLayer))\r\n      if (labelFeature) {\r\n        const defaultZoom = map.getZoom() + 1\r\n        defaultZoom < 16 && zoomOnEvent(defaultZoom)\r\n      }\r\n      resetRater()\r\n      return;\r\n    }\r\n  });\r\n}","export function saveLocation({ lng, lat }) {\r\n  window.localStorage.setItem('lastLocation', JSON.stringify({ lng, lat }))\r\n}\r\n\r\nexport function getLocation() {\r\n  let loc = window.localStorage.getItem('lastLocation')\r\n  if (!loc) return {}\r\n  loc = JSON.parse(loc)\r\n  const { lng, lat } = loc\r\n  return { lng, lat }\r\n}","// const basicLanguage = {\r\n//   homeLinkBtn: \"Home\",\r\n//   authLinkBtn: \"Authorize\",\r\n//   setsLinkBtn: \"Settings\",\r\n//   login: \"Login\",\r\n//   register: 'Register',\r\n//   yourName: 'Your name',\r\n//   submit: 'Submit',\r\n//   confirm: 'Confirm',\r\n//   greetings: 'Hello there',\r\n//   firstTimeRate: 'You have an honor to be first to rate this place!',\r\n//   placeRatingPrefix: 'This place has rating of',\r\n//   placeAmountPrefix: 'Rated',\r\n//   placeAmountNumberEnds1: 'time',\r\n//   placeAmountNPostfix: 's',\r\n//   push: 'Push',\r\n//   commentPlacehol: 'any comments?'\r\n// }\r\nconst rus = {\r\n  homeLinkBtn: \"Главная\",\r\n  authLinkBtn: \"Логин\",\r\n  setsLinkBtn: \"Настройки\",\r\n  login: \"Логин\",\r\n  logout: 'Выйти',\r\n  register: 'Регистрация',\r\n  yourName: 'Ваше имя',\r\n  submit: 'Отправить',\r\n  confirm: 'Подтвердить',\r\n  greetings: 'Привет',\r\n  firstTimeRate: 'Вам выпала честь первым оценить это место!',\r\n  placeRatingPrefix: 'Общий рейтинг',\r\n  placeAmountPrefix: 'Это место оценили',\r\n  placeAmountNumberEnds1: 'раз',\r\n  placeAmountEndsMultiple: 'раза',\r\n  push: 'Нажать',\r\n  commentPlacehol: 'есть комментарии?',\r\n  rating: 'Ваша оценка',\r\n  bestRating: 'Замечательно',\r\n  worstRating: 'Ужасно',\r\n  reviews: 'Отзывы',\r\n  noComments: 'Без комментариев',\r\n  searchPHolder: 'Найти',\r\n  newFeature: 'Новый объект на карте',\r\n  newFeaturePHolder: 'Адрес или название места',\r\n  drawPromptHeader: 'Режим рисования',\r\n  drawPrompt: 'Завершите создание, дважды нажав на последнюю точку полигона',\r\n}\r\n\r\n// export const TEXT = window.APPTEXT || basicLanguage\r\nexport const TEXT = rus","import { getAdress } from \"../requests/map\";\r\n\r\nexport function mapAddControl(map, setFeature, createBtn, deleteBtn, setDrawPrompt, resetRater) {\r\n\r\n  const draw = new window.MapboxDraw({\r\n    displayControlsDefault: false,\r\n    controls: {\r\n      // polygon: true,\r\n      // trash: true\r\n    },\r\n    // defaultMode: 'draw_polygon'\r\n  });\r\n  \r\n  // Create custom controls\r\n  createBtn.onclick = function () {\r\n    draw.changeMode('draw_polygon')\r\n    deleteBtn.style.display = 'block'\r\n    setDrawPrompt(true)\r\n  }\r\n  deleteBtn.onclick = function () {\r\n    draw.deleteAll()\r\n    resetRater()\r\n    setDrawPrompt(false)\r\n    createBtn.style.display = 'block'\r\n    deleteBtn.style.display = 'none'\r\n  }\r\n\r\n  map.addControl(draw);\r\n  createBtn.style.display = 'block'\r\n  deleteBtn.style.display = 'none'\r\n\r\n\r\n  map.on('draw.create', updateArea);\r\n  map.on('draw.update', updateArea);\r\n  // map.on('draw.delete', afterDelete);\r\n  // map.on('draw.selectionchange', afterUnfocus);\r\n  // function afterDelete() {\r\n  // }\r\n  // function afterUnfocus() {\r\n  //   console.log('%c⧭', 'color: #cc7033', 'afterUnfocus');\r\n  // }\r\n\r\n  async function updateArea(e) {    \r\n    setDrawPrompt(false)\r\n    createBtn.style.display = 'none'\r\n\r\n    // console.log('%c⧭', 'color: #8c0038', 'update area func');\r\n\r\n    const data = draw.getAll();\r\n\r\n    if (data.features.length > 0) {\r\n      const area = window.turf.area(data);\r\n      // restrict to area to 2 decimal points\r\n      const rounded_area = Math.round(area * 100) / 100;\r\n      // console.log('%c⧭', 'color: #99adcc', rounded_area);\r\n      // TODO if area > 30_000 show error notification, also check for too little area. Also chek if nothing inside\r\n      const feature = { ...data.features[0] }\r\n      feature.properties.amount = 0\r\n      feature.properties.created = true\r\n      feature.source = 'createdPoly'\r\n      const [lng, lat] = window.turf.centroid(feature.geometry).geometry.coordinates\r\n      const zoom = map.getZoom()\r\n      // Vector tile feature calculations\r\n      feature._vectorTileFeature = {\r\n        _x: Math.floor((lng + 180) / 360 * Math.pow(2, zoom)),\r\n        _y: Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom))\r\n      }\r\n\r\n      // feature.properties.name = await getAdress(lat, lng)\r\n      setFeature(feature)\r\n    }\r\n    // if (e.type !== 'draw.delete')\r\n  }\r\n\r\n  return draw\r\n}","import { useEffect, useRef, useState } from 'react'\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport { getPlaces } from '../requests/map';\r\nimport { mapOnLoad } from './onLoad';\r\nimport { geoJsonFromResponse } from './filters';\r\nimport { mapOnClick } from './onClick';\r\nimport { getLocation, saveLocation } from '../rest/helperFuncs';\r\nimport { TEXT } from '../rest/lang';\r\nimport { mapAddControl } from './addControl';\r\n\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_T;\r\n\r\nexport const Map = ({ feature, setFeature, resetRater, geoData, setGeoData, featureTrigger }) => {\r\n  const mapContainer = useRef(null);\r\n\r\n  const map = useRef(null);\r\n  const createBtn = useRef(null);\r\n  const deleteBtn = useRef(null);\r\n  const [drawPrompt, setDrawPrompt] = useState(false);\r\n  // const [lng, setLng] = useState(-122.447303);\r\n  // const [lat, setLat] = useState(37.753574);\r\n  // const [zoom, setZoom] = useState(16);\r\n\r\n\r\n  // Init map\r\n  useEffect(() => {\r\n    (async function () {\r\n      const { lng, lat } = getLocation()\r\n\r\n      const res = await getPlaces()\r\n      if (res.status !== 'OK') return console.log('bad request', res);\r\n      if (map.current) return; // initialize map only once, dev environment optimization\r\n\r\n      const geoJson = geoJsonFromResponse(res.data)\r\n\r\n      setGeoData(geoJson)\r\n\r\n      map.current = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        // style: 'mapbox://styles/mapbox/streets-v11',\r\n        // style: 'mapbox://styles/ilyaizr/ckpk75aca0hbg17ouqvzsda51',     //pale basic styles\r\n        style: 'mapbox://styles/ilyaizr/ckpk88ybo17tn17mzmd5etst8',    //pale-ish from streets-v11       //pale basic styles\r\n        // style: 'mapbox://styles/ilyaizr/ckq2l808k0ifn17o0x0yl9qi4',     //blue shades  \r\n        // center: [-122.447303, 37.753574],  // palo alto\r\n        center: [lng || 34.354, lat || 53.235], // bryansk\r\n        zoom: 16\r\n      });\r\n\r\n      // Add search\r\n      map.current.addControl(\r\n        new window.MapboxGeocoder({\r\n          accessToken: process.env.REACT_APP_MAPBOX_T,\r\n          mapboxgl: mapboxgl,\r\n          placeholder: TEXT.searchPHolder\r\n        })\r\n      );\r\n\r\n      const drawObject = mapAddControl(map.current, setFeature, createBtn.current, deleteBtn.current, setDrawPrompt, resetRater)\r\n      // console.log('%c⧭', 'color: #5200cc', p.sty);\r\n      mapOnLoad(map.current, geoJson)\r\n      mapOnClick(map.current, setFeature, resetRater, drawObject)\r\n      window.geocoderRef = new window.google.maps.Geocoder()\r\n    })()\r\n\r\n    const interval = setInterval(() => {\r\n      const loc = map.current?.getCenter?.()\r\n      if (loc) saveLocation(loc)\r\n    }, 10000);\r\n\r\n    return () => clearInterval(interval)\r\n    /* eslint-disable */\r\n  }, []);\r\n  /* eslint-enable */\r\n\r\n  // Dynamic geodata\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    setMapData(map.current, geoData, 'ratedFeaturesSource')\r\n    /* eslint-disable */\r\n  }, [featureTrigger]);\r\n  /* eslint-enable */\r\n\r\n  // Mark selected feature\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n\r\n    setMapData(map.current, [feature || {}], 'selectedFeatureSrc')\r\n    /* eslint-disable */\r\n  }, [feature]);\r\n  /* eslint-enable */\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n      {/* Add button */}\r\n      <button id=\"createBtn\" ref={createBtn} className=\"mp-bg-light mp-border-primary controlButton\">\r\n        <img src=\"/icons/edit-pen.svg\" alt=\"draw area\" />\r\n      </button>\r\n      {/* Delete button */}\r\n      <button id=\"deleteBtn\" ref={deleteBtn} className=\"mp-bg-light mp-border-primary controlButton\">\r\n        <img src=\"/icons/trash.svg\" alt=\"cancel drawing\" />\r\n      </button>\r\n      {/* Helper prompt */}\r\n      {drawPrompt && <div className=\"controlPrompt mp-border-counter mp-bg-light\">\r\n        <h6>{TEXT.drawPromptHeader}</h6>\r\n        <p>{TEXT.drawPrompt}</p>\r\n      </div>\r\n      }\r\n\r\n\r\n      <div className=\"calculation-box\">\r\n        <p>Draw a polygon using the draw tools.</p>\r\n        <div id=\"calculated-area\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function setMapData(map, geoData, sourceId) {\r\n  map.getSource(sourceId).setData({\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": geoData\r\n  })\r\n}\r\n\r\nexport function flyToFeature(map, feature, zoom = 16, speed = 0.5) {\r\n  const [lng, lat] = window.turf.centroid(feature.geometry).geometry.coordinates\r\n  map.flyTo({ center: [lng, lat], zoom, speed });\r\n  return [lng, lat]\r\n}","export function geoJsonFromResponse(places) {\r\n  if (!places?.length) return []\r\n\r\n  const geoJson = places.map(placeData => {\r\n    const res = {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: \"MultiPolygon\",\r\n      },\r\n      id: placeData.id,\r\n      properties: {\r\n        rating: Number(placeData.rating),\r\n        amount: placeData.amount,\r\n        name: placeData.name,\r\n        lng: placeData.lng,\r\n        lat: placeData.lat\r\n      },\r\n      source: \"composite\",\r\n      sourceLayer: \"building\",\r\n    }\r\n    // if (placeData?.polygon?.length > 1) res.geometry.type = \"MultiPolygon\"\r\n\r\n    // Case multypolygon\r\n    res.geometry.coordinates = placeData?.polygon?.map(polygon => polygon.map(polyFigure => {\r\n      return polyFigure.map(polygon => [polygon.x, polygon.y])\r\n    }))\r\n\r\n    return res\r\n  })\r\n  return geoJson\r\n}","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { gradient } from '../rest/colors';\r\nimport { TEXT } from '../rest/lang';\r\n\r\nexport const Rater = ({ rating, setRating, comment, setComment, onSubmit }) => {\r\n  const [hover, setHover] = useState(0);\r\n\r\n  function onClick(e) {\r\n    setRating(hover)\r\n  }\r\n  function onInput(e) {\r\n    setComment(e.target.value)\r\n  }\r\n  function onSub() {\r\n    setHover(0)\r\n    onSubmit()\r\n  }\r\n  function onMouseEnter(e) {\r\n    setHover(Number(e.target.name))\r\n  }\r\n  function onMouseLeave() {\r\n    setHover(rating)\r\n  }\r\n\r\n  // TODO make stars with rating gradient\r\n  return (\r\n    <div className=\"rater\">\r\n\r\n      <div className=\"stars\">\r\n        <h5 className=\"starRating\">{TEXT.rating} :</h5> <span className=\"hoverValue mp-dark\">{hover}</span>\r\n        <br />\r\n        {[...Array(5)].map((star, index) => {\r\n          index += 1;\r\n          return (\r\n            <button\r\n              type=\"button\"\r\n              key={index}\r\n              name={index}\r\n              className={index <= (hover || rating) ? \"mp-accent starButton\" : \"mp-secondary starButton\"}\r\n              onClick={onClick}\r\n              onMouseEnter={onMouseEnter}\r\n              onMouseLeave={onMouseLeave}\r\n              style={index <= (hover || rating) ? { color: gradient[hover] } : {}}\r\n            >\r\n              <span className=\"star\">&#9733;</span>\r\n            </button>\r\n          );\r\n        })}\r\n\r\n      </div>\r\n\r\n      <textarea\r\n        name=\"comment\" cols=\"31\" rows=\"2\"\r\n        value={comment} onInput={onInput}\r\n        className=\"raterComment\"\r\n        placeholder={TEXT.commentPlacehol}\r\n      />\r\n\r\n      <div className=\"raterBtnContainer\">\r\n        <button type=\"button\" onClick={onSub}>{TEXT.push}</button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { getAdress, postPlaceName } from '../requests/map';\r\nimport { TEXT } from \"../rest/lang\";\r\n\r\nexport const Featurer = ({ feature, name, setName }) => {\r\n\r\n  useEffect(() => {\r\n    if (feature?.name) setName(feature.properties.name)\r\n\r\n    console.log('%c⧭', 'color: #d0bfff', feature);\r\n  }, [feature, setName])\r\n\r\n  // Temp - add adresses functionality\r\n  async function onClick() {\r\n    const { lat, lng } = feature.properties\r\n    const name = await getAdress(lat, lng)\r\n    console.log('%c⧭', 'color: #ff6600', name);\r\n\r\n    const res = await postPlaceName(name, feature.id)\r\n    console.log('%c⧭', 'color: #40fff2', res);\r\n  }\r\n\r\n  if (!feature?.source) {\r\n    console.log('wtf feature', feature);\r\n    return null\r\n  }\r\n  // Case rated before\r\n  if (feature.source === 'ratedFeaturesSource') return (\r\n    <div className=\"featurer\">\r\n      <p className=\"rateAmount\">\r\n        {TEXT.placeAmountPrefix + ' ' + feature.properties.amount + ' '}\r\n        {String(feature.properties.amount).endsWith('1') ? TEXT.placeAmountNumberEnds1 : TEXT.placeAmountEndsMultiple}\r\n      </p>\r\n      <h5 className=\"rateValue\">\r\n        {TEXT.placeRatingPrefix}:\r\n        <span className=\"rateNumber\"> {feature.properties.rating}</span>\r\n      </h5>\r\n      {feature.properties.name ?\r\n        <div className=\"featureNameWrap\">\r\n          <p className=\"featureName mp-bg-counter mp-border-primary mp-primary\">{feature.properties.name}</p>\r\n        </div>\r\n        : <></>}\r\n      <button onClick={onClick}>add name</button>\r\n    </div>\r\n  )\r\n  // Case created  \r\n  function onInput(e) {\r\n    setName(e.target.value)\r\n    feature.properties.name = e.target.value\r\n  }\r\n  if (feature.source === 'createdPoly') return (\r\n    <div className=\"featurer\">\r\n      <p className=\"featurerGreetings\">\r\n        {TEXT.newFeature}\r\n      </p>\r\n\r\n      <div className=\"featureNameWrap\">\r\n        <input\r\n          type=\"text\" value={name} onInput={onInput}\r\n          placeholder={TEXT.newFeaturePHolder} title={TEXT.newFeaturePHolder}\r\n          className=\"featureName mp-bg-counter mp-border-counter  mp-primary\"\r\n        />\r\n      </div>\r\n      {/* {feature.properties.name ?\r\n        <div className=\"featureNameWrap\">\r\n          <p className=\"featureName mp-bg-counter mp-border-counter  mp-primary\">{feature.properties.name}</p>\r\n        </div>\r\n        : <div>\r\n          <input type=\"text\" value={name} onInput={onInput} placeholder={'enter name or name'}/>\r\n        </div>} */}\r\n    </div>\r\n  )\r\n  // Case new feature\r\n  return (\r\n    <div className=\"featurer\">\r\n      <p className=\"featurerGreetings\">\r\n        {TEXT.firstTimeRate}\r\n      </p>\r\n      {feature.properties.name ?\r\n        <div className=\"featureNameWrap\">\r\n          <p className=\"featureName mp-bg-counter mp-border-primary  mp-primary\">{feature.properties.name}</p>\r\n        </div>\r\n        : <></>}\r\n    </div>\r\n  )\r\n}\r\n","export function formatGeodata(geometry) {\r\n  // Treat everyone as multiPoly\r\n  let multiPoly\r\n  if (geometry.type === 'Polygon') {\r\n    multiPoly = [geometry.coordinates]\r\n  }\r\n  else multiPoly = geometry.coordinates\r\n\r\n  let north = -90\r\n  let east = -180\r\n  let south = 90\r\n  let west = 180\r\n\r\n  // 'MULTIPOLYGON('\r\n  const polyPoints = []\r\n\r\n  multiPoly.forEach((polyCoords) => {\r\n    polyPoints.push( polygonMapper(polyCoords))\r\n  })\r\n  const multiFormatted = 'MULTIPOLYGON(' + polyPoints.join(', ') + ')'\r\n\r\n  function polygonMapper(polyCoords) {\r\n    const polyArray = []\r\n    polyCoords.forEach((coordinates, shapeIndex) => {\r\n      polyArray.push('(')\r\n      // Map through each poly entity\r\n      coordinates.forEach(([lon, lat], i) => {\r\n        //    Find medium lon and lat\r\n        // Lesser longitude = more western\r\n        if (lon < west) west = lon\r\n        if (lon > east) east = lon\r\n        // Lesser latitude - more southern\r\n        if (lat > north) north = lat\r\n        if (lat < south) south = lat\r\n\r\n        // Store polydata\r\n        polyArray[shapeIndex] += (i ? ', ' : '') + String(lon) + ' ' + String(lat)\r\n      })\r\n      polyArray[shapeIndex] += ')'\r\n    })\r\n\r\n    return '(' + polyArray.join(',') + ')'\r\n  }\r\n\r\n\r\n  return [\r\n    [east, north],\r\n    [west, south],\r\n    multiFormatted\r\n  ]\r\n}\r\n","import React from 'react'\r\nimport { gradient } from '../rest/colors'\r\nimport { TEXT } from '../rest/lang'\r\n\r\nexport const Legend = () => {\r\n  return (\r\n    <div className=\"mapLegend mp-bg-light mp-border-secondary mp-shadow-light\">\r\n      <div className=\"ratingLegend\">\r\n        <div className=\"ratingDescription\">\r\n          <span>{TEXT.worstRating}</span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span>{TEXT.bestRating}</span>\r\n        </div>\r\n        <div className=\"ratingUnitsWrap\">\r\n          {gradient.map((color, i) => {\r\n            return (\r\n              <div className=\"ratingUnit\" key={color + i}>\r\n                <span className=\"ratingColor\" style={{ backgroundColor: color }}></span>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className=\"ratingGradientWrap\">\r\n          <div className=\"ratingGradient\" style={{ background: `linear-gradient(90deg, ${gradient[0]}, ${gradient[3]}, ${gradient[5]})` }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// Name consts\r\nconst LOGINUSER = 'app/log_in'\r\nconst LOGOUTUSER = 'app/log_out'\r\nconst EXPAND_COMMENTS = 'app/expand_comms'\r\nconst SHRINK_COMMENTS = 'app/shrink_comms'\r\n\r\n// Reducer\r\nconst initialState = {\r\n  isLogged: false,\r\n  language: 'en',\r\n  reviewsShown: true\r\n}\r\n\r\nexport function appReducer(state = initialState, act) {\r\n  switch (act.type) {\r\n    case LOGINUSER: {\r\n      return {\r\n        ...state, isLogged: true\r\n      }\r\n    }\r\n    case LOGOUTUSER: {\r\n      return {\r\n        ...state, isLogged: false\r\n      }\r\n    }\r\n    case SHRINK_COMMENTS: {\r\n      return {\r\n        ...state, reviewsShown: false\r\n      }\r\n    }\r\n    case EXPAND_COMMENTS: {\r\n      return {\r\n        ...state, reviewsShown: true\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Actions\r\nexport const setLoginStatus = (d, status = false) => {\r\n  if (status) d({ type: LOGINUSER })\r\n  else d({ type: LOGOUTUSER })\r\n}\r\n\r\nexport const expandComments = (d) => {\r\n  d({ type: EXPAND_COMMENTS })\r\n}\r\n\r\nexport const shrinkComments = (d) => {\r\n  d({ type: SHRINK_COMMENTS })\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getReviews } from '../requests/map';\r\nimport { TEXT } from '../rest/lang';\r\nimport { expandComments, shrinkComments } from '../store/app';\r\n\r\nexport const Reviews = ({ feature }) => {\r\n  const dispatch = useDispatch()\r\n  const { reviewsShown } = useSelector(state => state.app)\r\n\r\n  const [reviews, setReviews] = useState([])\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (feature?.source !== 'ratedFeaturesSource') return (null)\r\n      \r\n      const res = await getReviews(feature.id)\r\n      if (res.status !== 'OK') return console.log('error with res', res);\r\n      setReviews(res.data)\r\n    })()\r\n    // Cleanup. Do we need it?\r\n    return () => {\r\n      setReviews([])\r\n    }\r\n  }, [feature?.source, feature?.id])\r\n\r\n  function onClick() {\r\n    reviewsShown ? shrinkComments(dispatch) : expandComments(dispatch)\r\n  }\r\n\r\n  \r\n  if (feature?.source !== 'ratedFeaturesSource') return (null)\r\n  return (\r\n    <div className={`reviewsContainer ${reviewsShown ? 'expanded' : 'shrinked'}`}>\r\n      {reviews.length ? reviews.map(review => {\r\n        return (\r\n          <div className=\"reviewWrap mp-border-secondary mp-shadow-light\" key={review.author + review.grade + Math.random()}>\r\n            <div className=\"authorLogo mp-bg-counter\">\r\n              <span className=\"mp-primary\" title={review.author}>{String(review.author)?.[0]?.toUpperCase()}</span>\r\n            </div>\r\n            <div className=\"reviewBody\">\r\n              <p className=\"author\">{review.author}</p>\r\n              <div className=\"reviewDate mp-secondary\">{new Date(review.timestamp).toLocaleDateString()}</div>\r\n              {Boolean(review.comment) && <div className=\"reviewComment mp-bg-primary\">{review.comment}</div>}\r\n              <div className=\"reviewRating\">{review.grade}/5\r\n              <span className=\"reviewStars stars\">\r\n                  {[...Array(5)].map((star, index) => {\r\n                    index += 1;\r\n                    return (\r\n                      <span key={index}\r\n                        className={index <= (review.grade) ? \"mp-accent starButton\" : \"mp-secondary starButton\"}\r\n                      >&#9733;\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      }) :\r\n        <div>{TEXT.noreviews}</div>\r\n      }\r\n\r\n      <div className=\"skipperContainer\">\r\n        <div className=\"skipper mp-bg-light mp-border-secondary\" onClick={onClick}>\r\n          {reviewsShown ? \r\n            <span className=\"mp-secondary\">&#8613;</span> :\r\n            <span className=\"mp-secondary\">&#8615;</span>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport { Map } from './Map'\r\nimport { Rater } from './Rater'\r\nimport { Featurer } from './Featurer';\r\nimport { formatGeodata } from './formatGeodata'\r\nimport { postInitReview, postNextReview } from '../requests/map';\r\nimport './Maps.css'\r\nimport { Legend } from './Legend';\r\nimport { Reviews } from './Reviews';\r\n\r\n\r\nexport const Main = () => {\r\n  // Store\r\n  const user = useSelector(state => state.user)\r\n  // Featurer\r\n  const [name, setName] = useState('')\r\n  // Rater\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('')\r\n  const [feature, setFeature] = useState(null);\r\n  // Map\r\n  const [geoData, setGeoData] = useState(null)\r\n  const [featureTrigger, setFeatureTrigger] = useState(0);\r\n  const [mapTrigger, setMapTrigger] = useState(0);\r\n  function updateLayers() {\r\n    setFeatureTrigger(featureTrigger + 1)\r\n  }\r\n\r\n  function resetRater() {\r\n    setRating(0)\r\n    setComment('')\r\n    setName('')\r\n    setFeature(null)\r\n  }\r\n\r\n  async function onSubmit() {\r\n    // Calculations\r\n    const [northEastest, southWestest, polyString] = formatGeodata(feature.geometry)\r\n    const tempBox = new mapboxgl.LngLatBounds(northEastest, southWestest)\r\n    const { lng, lat } = tempBox.getCenter()\r\n\r\n\r\n    // Data to store\r\n    const review = {\r\n      comment,\r\n      grade: rating,\r\n      targetId: feature.id,\r\n    }\r\n    const place = {\r\n      lng, lat,\r\n      x: feature._vectorTileFeature._x,\r\n      y: feature._vectorTileFeature._y,\r\n      id: feature.id,\r\n      name: feature.properties.name || \"\",\r\n      polyString\r\n    }\r\n    // Case next review\r\n    if (feature.source === 'ratedFeaturesSource') {\r\n      const res = await postNextReview({ user: user.login, review, place: { ...feature.properties, id: feature.id } })\r\n      if (res.status !== 'OK') return console.log('%c⧭', 'color: #bf1d00', res);\r\n      // Mutate geoData\r\n      for (let i = 0; i < geoData.length; i++) {\r\n        if (geoData[i].id === feature.id) {\r\n          const { amount, rating } = feature.properties\r\n          geoData[i].properties = {\r\n            rating: +((amount * rating + review.grade) / (amount + 1)).toFixed(5),  //toFixed - 5 numbers after point\r\n            amount: amount + 1\r\n          }\r\n          break;\r\n        }\r\n      } setGeoData(geoData)\r\n      updateLayers()\r\n      return resetRater()\r\n    }\r\n\r\n\r\n    // Case first time review\r\n    // console.log(user.login, review, place);\r\n    setGeoData([...geoData, {\r\n      type: 'Feature',\r\n      properties: { rating, name, amount: 1 },\r\n      id: feature.id,\r\n      // geometry: {...feature.geometry}\r\n      geometry: feature.geometry\r\n    }])\r\n    updateLayers()\r\n    const res = await postInitReview({ user: user.login, review, place })\r\n    if (res.status !== 'OK') return console.log('%c⧭', 'color: #bf1d00', res);\r\n\r\n    if (feature.source === 'createdPoly') setMapTrigger(mapTrigger + 1)\r\n    // Restore init features\r\n    resetRater()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Map\r\n        feature={feature} setFeature={setFeature}\r\n        resetRater={resetRater}\r\n        geoData={geoData} setGeoData={setGeoData}\r\n        featureTrigger={featureTrigger}\r\n        key={mapTrigger}\r\n      />\r\n      <Legend />\r\n      {feature &&\r\n        <div className=\"featureContainer mp-bg-light mp-border-secondary\">\r\n          <Featurer feature={feature} name={name} setName={setName} />\r\n          <Rater\r\n            rating={rating} setRating={setRating}\r\n            comment={comment} setComment={setComment}\r\n            onSubmit={onSubmit}\r\n          />\r\n          <Reviews feature={feature} />\r\n          <div className=\"closeFeature\" onClick={resetRater}>&#10005;</div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import { setLoginStatus } from './app'\r\n// Name consts\r\nconst WRITECREDENTIALS = 'user/set_credentials'\r\nconst CHANGELEVEL = 'user/set_level'\r\n\r\n// Reducer\r\nconst initialState = {\r\n  name: 'anonimus',\r\n  login: 'anonimus',\r\n  level: 0,\r\n  id: 1\r\n}\r\n\r\nexport function userReducer(state = initialState, act) {\r\n  switch (act.type) {\r\n    case WRITECREDENTIALS: {\r\n      return {\r\n        ...state, ...act.credentials\r\n      }\r\n    }\r\n    case CHANGELEVEL: {\r\n      return {\r\n        ...state, level: act.newLevel\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Actions\r\nexport const setCredentials = (d, name, login, id) => {\r\n  d({ type: WRITECREDENTIALS, credentials: { name, login, id } })\r\n}\r\nexport const logIntoApp = (d, name, login, id) => {\r\n  setCredentials(d, name, login, id)\r\n  setLoginStatus(d, true)\r\n}\r\nexport const logOutOfApp = (d) => {\r\n  setCredentials(d, '', '', '')\r\n  setLoginStatus(d, false)\r\n}\r\n\r\nexport const setUserLevel = (d, level) => {\r\n  d({ type: WRITECREDENTIALS, newLevel: Number(level) })\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TEXT } from '../rest/lang';\r\nimport { logIntoApp, logOutOfApp } from '../store/user';\r\n\r\nexport const Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n  const app = useSelector(state => state.app)\r\n\r\n  function onInput(e) {\r\n    setUsername(e.target.value)\r\n  }\r\n  function onSubmit() {\r\n    logIntoApp(dispatch, username, username, username + '-' + Math.floor(Math.random() * 1000))\r\n    window.localStorage.setItem('usernameTemp', username)\r\n  }\r\n  function logOut() {\r\n    window.localStorage.clear()\r\n    setUsername('')\r\n    logOutOfApp(dispatch)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (username !== user.name) setUsername(user.name)\r\n  }, [user.name, username])\r\n\r\n\r\n  return (\r\n    <div>{\r\n      app.isLogged ? <div>\r\n        <h4>{TEXT.greetings}, {username}</h4>\r\n\r\n        <button className=\"primary\" onClick={logOut}>{TEXT.logout}</button>\r\n      </div>\r\n        :\r\n        <>\r\n          <label htmlFor=\"name\">{TEXT.yourName}</label>\r\n          <input type=\"text\" name=\"name\" value={username} onInput={onInput} />\r\n          <button className=\"primary\" onClick={onSubmit}>{TEXT.confirm}</button>\r\n        </>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Register = () => {\r\n  return (\r\n    <div>\r\n      TBC\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n/* eslint-disable */\r\nimport { TEXT } from '../rest/lang'\r\nimport { Login } from './Login'\r\nimport { Register } from './Register'\r\n\r\nexport const AuthMain = () => {\r\n  const [isLogging, setIsLogging] = useState(true)\r\n  return (\r\n    <div>\r\n      {/* <h5>Login or register?</h5>\r\n      <div>\r\n        <button onClick={() => setIsLogging(true)}>{TEXT.login}</button>\r\n        <button onClick={() => setIsLogging(false)}>{TEXT.register}</button>\r\n      </div> */}\r\n      {isLogging ? <Login /> : <Register />}\r\n    </div>\r\n  )\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n// Components\nimport { Main } from \"./Map/Main\";\nimport { AuthMain } from './Auth/AuthMain'\nimport { useEffect, useState } from \"react\";\nimport { TEXT } from \"./rest/lang\";\n\nimport './App.css'\nimport './rest/colors.css'\nimport { logIntoApp } from \"./store/user\";\nimport { useDispatch } from \"react-redux\";\n\n\nfunction App() {\n  const [isMain, setIsMain] = useState(true);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const prevUser = window.localStorage.getItem('usernameTemp')\n    if (prevUser) {\n      logIntoApp(dispatch, prevUser, prevUser, prevUser + '-' + Math.floor(Math.random() * 1000))\n    }\n    /* eslint-disable */\n  }, [])\n  /* eslint-enable */\n\n  return (\n    <Router>\n\n      {/* navigation to be here */}\n      <div className=\"mainNavigation mp-bg-light mp-border-secondary\">\n        <Link className=\"mp-border-secondary\" to=\"/\" onClick={() => setIsMain(true)}>\n          {TEXT.homeLinkBtn}\n        </Link>\n        <Link className=\"mp-border-secondary\" to=\"/auth\" onClick={() => setIsMain(false)}>\n          {TEXT.authLinkBtn}\n        </Link>\n        <Link className=\"mp-border-secondary\" to=\"/settings\" onClick={() => setIsMain(false)}>\n          {TEXT.setsLinkBtn}\n        </Link>\n      </div>\n      {/* navigation to be here */}\n\n      <div className={isMain ? \"mainWrapper\" : \"hidden\"}>\n        <Main />\n      </div>\n\n      {/* Extra subpages */}\n\n      <Switch>\n\n        <Route path=\"/settings\">\n          <div className=\"routeWrapper\">\n            Settings component will be released soon\n          </div>\n        </Route>\n\n        <Route path=\"/auth\">\n          <div className=\"routeWrapper\">\n            <AuthMain />\n          </div>\n        </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\r\nimport { appReducer } from './app';\r\nimport { userReducer } from './user';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n  app: appReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { store } from './store/root';\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}